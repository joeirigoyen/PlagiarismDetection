Python is an interpreted language that has become more commonly used within HPC applications. In this work, we present an articulation of the challenges in testing ML based applications. We then present our solution approach, based on the concept of Metamorphic Testing, which aims to identify implementation bugs in other compiled languages. For HPC users, two of the most common extensions are NumPy and mpi4py. It is possible to write a full computational kernel in a compiled language and then build that kernel into an extension module. In principle, this can be done by utilizing algorithms such as exhaustive traversal or local search algorithm, whose time cost, however, is unbearable. Here we for the first time propose to employ machine learning methods into the selecting of optimal QKD protocol and apply random forest (RF) as an example for illustration. With the help of the easy-to-train classifier of RF, we can achieve a highly efficient optimal QKD protocols selector. Besides, we also do comparisons among RF and other machine learning methods, e.g., supporting vector machine, K-nearest neighbors algorithm, multinomial naive bayes classifier, and convolutional neural networks.

